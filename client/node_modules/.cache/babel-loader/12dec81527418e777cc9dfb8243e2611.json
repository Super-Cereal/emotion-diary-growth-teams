{"ast":null,"code":"var _jsxFileName = \"/Users/pikcelll/Documents/projects/tot-hack-growth-teams/client/src/pages/index.tsx\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { RecordRTC } from \"recordrtc\";\nimport { LoginPage } from \"./LoginPage/LoginPage\";\nimport { RegisterPage } from \"./RegisterPage/RegisterPage\";\nimport { MainPage } from \"./MainPage/MainPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Pages = () => {\n  navigator.mediaDevices.getUserMedia({\n    video: true,\n    audio: true\n  }).then(async function (stream) {\n    let recorder = RecordRTC(stream, {\n      type: \"video\"\n    });\n    recorder.startRecording();\n\n    const sleep = m => new Promise(r => setTimeout(r, m));\n\n    await sleep(3000);\n    recorder.stopRecording(function () {\n      let blob = recorder.getBlob();\n      invokeSaveAsDialog(blob);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: LoginPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        component: RegisterPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        component: MainPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      hideProgressBar: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Pages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pages\");","map":{"version":3,"names":["BrowserRouter","Switch","Route","ToastContainer","RecordRTC","LoginPage","RegisterPage","MainPage","Pages","navigator","mediaDevices","getUserMedia","video","audio","then","stream","recorder","type","startRecording","sleep","m","Promise","r","setTimeout","stopRecording","blob","getBlob","invokeSaveAsDialog"],"sources":["/Users/pikcelll/Documents/projects/tot-hack-growth-teams/client/src/pages/index.tsx"],"sourcesContent":["import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport { RecordRTC } from \"recordrtc\";\n\nimport { LoginPage } from \"./LoginPage/LoginPage\";\nimport { RegisterPage } from \"./RegisterPage/RegisterPage\";\nimport { MainPage } from \"./MainPage/MainPage\";\n\nexport const Pages = () => {\n  navigator.mediaDevices\n    .getUserMedia({\n      video: true,\n      audio: true,\n    })\n    .then(async function (stream) {\n      let recorder = RecordRTC(stream, {\n        type: \"video\",\n      });\n      recorder.startRecording();\n\n      const sleep = (m) => new Promise((r) => setTimeout(r, m));\n      await sleep(3000);\n\n      recorder.stopRecording(function () {\n        let blob = recorder.getBlob();\n        invokeSaveAsDialog(blob);\n      });\n    });\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <Route path=\"/*\" component={MainPage} />\n      </Switch>\n      <ToastContainer hideProgressBar={true} />\n    </BrowserRouter>\n  );\n};\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;EACzBC,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;IACZC,KAAK,EAAE,IADK;IAEZC,KAAK,EAAE;EAFK,CADhB,EAKGC,IALH,CAKQ,gBAAgBC,MAAhB,EAAwB;IAC5B,IAAIC,QAAQ,GAAGZ,SAAS,CAACW,MAAD,EAAS;MAC/BE,IAAI,EAAE;IADyB,CAAT,CAAxB;IAGAD,QAAQ,CAACE,cAAT;;IAEA,MAAMC,KAAK,GAAIC,CAAD,IAAO,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAIF,CAAJ,CAA7B,CAArB;;IACA,MAAMD,KAAK,CAAC,IAAD,CAAX;IAEAH,QAAQ,CAACQ,aAAT,CAAuB,YAAY;MACjC,IAAIC,IAAI,GAAGT,QAAQ,CAACU,OAAT,EAAX;MACAC,kBAAkB,CAACF,IAAD,CAAlB;IACD,CAHD;EAID,CAlBH;EAoBA,oBACE,QAAC,aAAD;IAAA,wBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,SAAS,EAAEpB;MAAhC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,SAAS,EAAEC;MAAnC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,IAAZ;QAAiB,SAAS,EAAEC;MAA5B;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,cAAD;MAAgB,eAAe,EAAE;IAAjC;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA/BM;KAAMC,K"},"metadata":{},"sourceType":"module"}