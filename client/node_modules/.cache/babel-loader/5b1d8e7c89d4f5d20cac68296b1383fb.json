{"ast":null,"code":"var _jsxFileName = \"/Users/pikcelll/Documents/projects/tot-hack-growth-teams/client/src/components/LoadVideo/LoadVideo.tsx\";\nimport RecordRTC from \"recordrtc\";\nimport { postVideoWebm } from \"../../store/video/init\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoadVideo = () => {\n  const handleClick = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(async function (stream) {\n      const recorder = new RecordRTC(stream, {\n        type: \"video\"\n      });\n      recorder.startRecording();\n\n      const sleep = m => new Promise(r => setTimeout(r, m));\n\n      await sleep(3000);\n      recorder.stopRecording(function () {\n        const blob = recorder.getBlob();\n        const formData = new FormData();\n        formData.append(\"webm\", blob, \"video.webm\");\n        postVideoWebm(formData);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0441\\u043D\\u0438\\u043C\\u0430\\u0442\\u044C \\u0432\\u0438\\u0434\\u043E\\u0441\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 10\n  }, this);\n};\n_c = LoadVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadVideo\");","map":{"version":3,"names":["RecordRTC","postVideoWebm","LoadVideo","handleClick","navigator","mediaDevices","getUserMedia","video","then","stream","recorder","type","startRecording","sleep","m","Promise","r","setTimeout","stopRecording","blob","getBlob","formData","FormData","append"],"sources":["/Users/pikcelll/Documents/projects/tot-hack-growth-teams/client/src/components/LoadVideo/LoadVideo.tsx"],"sourcesContent":["import RecordRTC from \"recordrtc\";\n\nimport { postVideoWebm } from \"../../store/video/init\";\n\nexport const LoadVideo = () => {\n  const handleClick = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n      })\n      .then(async function (stream: any) {\n        const recorder = new RecordRTC(stream, {\n          type: \"video\",\n        });\n\n        recorder.startRecording();\n\n        const sleep = (m: number) => new Promise((r) => setTimeout(r, m));\n        await sleep(3000);\n\n        recorder.stopRecording(function () {\n          const blob = recorder.getBlob();\n          const formData = new FormData();\n          formData.append(\"webm\", blob, \"video.webm\");\n          postVideoWebm(formData);\n        });\n      });\n  };\n\n  return <button onClick={handleClick}>Начать снимать видос</button>;\n};\n"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,WAAtB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC7B,MAAMC,WAAW,GAAG,MAAM;IACxBC,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;MACZC,KAAK,EAAE;IADK,CADhB,EAIGC,IAJH,CAIQ,gBAAgBC,MAAhB,EAA6B;MACjC,MAAMC,QAAQ,GAAG,IAAIV,SAAJ,CAAcS,MAAd,EAAsB;QACrCE,IAAI,EAAE;MAD+B,CAAtB,CAAjB;MAIAD,QAAQ,CAACE,cAAT;;MAEA,MAAMC,KAAK,GAAIC,CAAD,IAAe,IAAIC,OAAJ,CAAaC,CAAD,IAAOC,UAAU,CAACD,CAAD,EAAIF,CAAJ,CAA7B,CAA7B;;MACA,MAAMD,KAAK,CAAC,IAAD,CAAX;MAEAH,QAAQ,CAACQ,aAAT,CAAuB,YAAY;QACjC,MAAMC,IAAI,GAAGT,QAAQ,CAACU,OAAT,EAAb;QACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;QACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB,EAA8B,YAA9B;QACAlB,aAAa,CAACoB,QAAD,CAAb;MACD,CALD;IAMD,CApBH;EAqBD,CAtBD;;EAwBA,oBAAO;IAAQ,OAAO,EAAElB,WAAjB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA1BM;KAAMD,S"},"metadata":{},"sourceType":"module"}